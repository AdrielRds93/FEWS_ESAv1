<?xml version="1.0" encoding="UTF-8"?>
<transformationModule xmlns="http://www.wldelft.nl/fews"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.wldelft.nl/fews http://schemas/transformationModule.xsd"
    version="1.0">
<!--
Using daily time series and accumulated hourly time series:
Convert point precipitation to gridded precipitation. Divides station values by
mean annual precip, interpolates the results (the anomalies), and multiplies
the interpolated anomalies by the annual climatology.

The background climatology grid is saved as an ASC file defined as the z value
(elevation) for the grid.

Input data: daily observations (from ImportPostGreSQL_DailyGages module) and 15-minute accumulated
to daily (from 15MinTo1Day_AutoPrecipGages module). 
-->
    <variable>
        <variableId>point_precip</variableId>
        <timeSeriesSet>
            <moduleInstanceId>15MinTo1Day_AutoPrecipGages</moduleInstanceId>
            <moduleInstanceId>CopyRawToQCed_DailyPrecip</moduleInstanceId>
            <valueType>scalar</valueType>
            <parameterId>PP</parameterId>
            <locationSetId>ActivePrecipGages</locationSetId>
            <timeSeriesType>external historical</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>read only</readWriteMode>
        </timeSeriesSet>
    </variable>

<!-- Internal time series/grids -->
    <variable>
        <variableId>anomaly</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>scalar</valueType>
            <parameterId>DFAC</parameterId>
            <locationSetId>DailyPrecipGages</locationSetId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>
    <variable>
        <variableId>interpAnomaly1</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>DFAC</parameterId>
            <qualifierId>3Stations</qualifierId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>
    <variable>
        <variableId>interpAnomaly2</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>DFAC</parameterId>
            <qualifierId>10Stations</qualifierId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>
    <variable>
        <variableId>interpAnomalyMerge</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>DFAC</parameterId>
            <qualifierId>Merged</qualifierId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>
    <variable>
        <variableId>zero</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>PP</parameterId>
            <qualifierId>ZeroGrid</qualifierId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>
    <variable>
        <variableId>climatology</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>PP</parameterId>
            <qualifierId>Climatology</qualifierId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>temporary</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>

<!--Output grid -->
    <variable>
        <variableId>finalPrecip</variableId>
        <timeSeriesSet>
            <moduleInstanceId>Interpolate1DayPrecipGrids</moduleInstanceId>
            <valueType>grid</valueType>
            <parameterId>QPE</parameterId>
            <locationId>Interpolated</locationId>
            <timeSeriesType>external historical</timeSeriesType>
            <timeStep unit="day" multiplier="1" timeZone="GMT+11"/>
            <relativeViewPeriod unit="hour" start="-288" startOverrulable="true" end="24"/>
            <readWriteMode>add originals</readWriteMode>
        </timeSeriesSet>
    </variable>

 <!--Divide station values by mean seasonal precip value (from station shapefile) -->
    <transformation id="CreateStationAnomalies">
        <user>
            <simple>
                <expression>(point_precip / AnnualP_mm)</expression>
                <coefficientSetFunctions>
                    <coefficient id="AnnualP_mm" value="@AnnualP_mm@"/>
                </coefficientSetFunctions>
                <outputVariable>
                    <variableId>anomaly</variableId>
                </outputVariable>
            </simple>
        </user>
    </transformation>

<!--Interpolate anomalies computed last step using inverse distance weighting.
    Because the stations used for interpolation is fixed regardless of missing
    data, do in two steps: first using 3 stations, setting to missing if there
    are missing values (this gets a better estimate in areas with observations;
    second using all stations (so there is an estimate everywhere if any data
    are available).-->
    <transformation id="InterpolateAnomalies_NoMissing">
        <interpolationSpatial>
            <inverseDistance>
                <inputVariable>
                    <variableId>anomaly</variableId>
                </inputVariable>
                <minimumValue>0</minimumValue>
                <includeMissingValues>true</includeMissingValues>
                <searchRadius>10000000</searchRadius>
                <!--2012.02 requires the following:-->
                <!--<distanceGeoDatum>UTM16N</distanceGeoDatum>-->
                <inverseDistancePower>2.5</inverseDistancePower>
                <numberOfPoints>3</numberOfPoints>
                <outputVariable>
                    <variableId>interpAnomaly1</variableId>
                </outputVariable>
            </inverseDistance>
        </interpolationSpatial>
    </transformation>
    <transformation id="InterpolateAnomalies_AllowMissing">
        <interpolationSpatial>
            <inverseDistance>
                <inputVariable>
                    <variableId>anomaly</variableId>
                </inputVariable>
                <minimumValue>0</minimumValue>
                <includeMissingValues>false</includeMissingValues>
                <searchRadius>10000000</searchRadius>
                <!--2012.02 requires the following:-->
                <!--<distanceGeoDatum>UTM16N</distanceGeoDatum>-->
                <inverseDistancePower>2.5</inverseDistancePower>
                <numberOfPoints>20</numberOfPoints>
                <outputVariable>
                    <variableId>interpAnomaly2</variableId>
                </outputVariable>
            </inverseDistance>
        </interpolationSpatial>
    </transformation>
	<transformation id="MergeAnomalies">
		<merge>
			<simple>
			<inputVariable>
				<variableId>interpAnomaly1</variableId>
			</inputVariable>
			<inputVariable>
				<variableId>interpAnomaly2</variableId>
			</inputVariable>
			<outputVariable>
				<variableId>interpAnomalyMerge</variableId>
			</outputVariable>
			</simple>
		</merge>
	</transformation>

<!--Although this transformation assigns a value of 0 to the output variable,
    the elevation associated with the grid equals the climatology-->
    <transformation id="CreateZero">
        <user>
            <simple>
                <expression>0</expression>
                <outputVariable>
                    <variableId>zero</variableId>
                </outputVariable>
            </simple>
        </user>
    </transformation>

<!--
Use the lapse rate transformation to assign the climatology to the output time series.

outputTemperature = inputTemperature + (inputElevation - outputElevation) * temperatureLapseRate / 100
inputElevation=Climatology (defined as elevation for zero grids)
Since outputElevation=0, temperatureLapseRate=100, outputTemperature=Climatology
-->
    <transformation id="CreateClimatology">
        <altitude>
            <elevationLapse>
                <inputTemperature>
                    <variableId>zero</variableId>
                </inputTemperature>
                <coefficientSet>
                    <temperatureLapseRate>100</temperatureLapseRate>
                    <outputElevation>0</outputElevation>
                </coefficientSet>
                <outputTemperature>
                    <variableId>climatology</variableId>
                </outputTemperature>
            </elevationLapse>
        </altitude>
    </transformation>

<!-- Multiply the interpolated station anomaly grid by the climatology to yield
     the final precipitation -->
    <transformation id="MultiplyAnomalyTimesClimatology">
        <user>
            <simple>
                <expression>interpAnomalyMerge*climatology</expression>
                <outputVariable>
                    <variableId>finalPrecip</variableId>
                </outputVariable>
            </simple>
        </user>
    </transformation>


</transformationModule>
